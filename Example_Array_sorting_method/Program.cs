// Сортировка элементов массива по возростанию.
// 1. Найти позицию минимального элемента в неотсортированной части массива.
// 2. Произвести обмен этого значения со значением первой неотсортированной позиции
// 3. Повторять пока есть неотсортированные элементы

int[] arr = {2,6,8,3,5,7,9,1,3,5,8,4};


void PrintArray (int[] array)  // Создали Метод который будет распечатывать наш Массив
{
    int count = array.Length;  // Инициировали переменную, которая равна длинне Массива

    for(int i = 0; i < count; i++)  // Создаем Цикл, который будет увеличивать i(индекс элемента массива) пока он меньше count(количества элементов).
    {
        Console.Write($"{array[i]} ");  // Выводим в Консоль значение ЭЛЕМЕНТА МАССИВА (по индексу), (через пробел).
    }
    Console.WriteLine();  // Добавим пустую строку, для визуального разделения.
}
// ____________________________________________

void SelectionSort(int[] array)  //  Создадим Метод который будет отсортировывать наш Массив
{
    for(int i = 0; i < array.Length -1; i++) // Создаем Цикл, который будет увеличивать i(индекс элемента массива) 
    // пока он меньше array.Length (длинны Массива / количества элементов).
    // Можно создать переменную для значения дляиины Массива, как выше, а можно обратиться напрямую.
    // array.Length -1; -1(для уменьшения последнего значения элемента Массива. Так как ниже int j = i+1;)
    {
        int minPosition = i; // В minPosition запоминаем значение рабочего элемента,
        // над которым будем производить дальнейшие действия.
        for(int j = i+1; j < array.Length; j++) // i+1(начинает сортировку со следующего элемента 
        // после i- (неотсортированная часть массива)
        // j < array.Length; j++ - продолжаем сортировку до последнего элемента массива
        {
            if(array[j] < array[minPosition])  //  Данный блок кода ищит МАКСИМАЛЬНЫЙ элемент
            {
                minPosition = j;
            }
        }

        int temprory = array[i];  // Присваиваем временное значение
        array[i] = array[minPosition];  // Обмен двух переменных местами
        array[minPosition] = temprory;  // В минимальную позицию кладем временный элемент. Обмен двух переменных местами 
    }
}


PrintArray(arr);  // Вызываем МЕТОД.

SelectionSort(arr); // Вызываем Метод Сортировки
PrintArray(arr);  //  Распечатываем отсортированный Массив
